public Add_Subtract()

public double addDoubles(double x, double y)
Adds two double values
Parameters:
 x - a double input
 y - a double input
Returns: the sum of x and y as a double

public int addIntegers(int x, int y)
Adds two integer values
Parameters:
 x - an integer input
 y - an integer input
Returns: the sum of x and y as an integer

public double subtractDoubles(double x, double y)
Subtracts two double values
Parameters:
 x - a double input
 y - a double input
Returns: the difference of x and y as a double

public int subtractIntegers(int x, int y)
Subtracts two integer values
Parameters:
 x - an integer input
 y - an integer input
Returns: the difference of x and y as an integer


public DataFormatter()

public int roundIt(double y)
Accepts a double an returns an integer by rounding decimals
Parameters: y - a double input
Returns: the value of y rounded to an integer

public int truncateIt(double y)
Accepts a double an returns an integer by truncating decimals
Parameters: y - a double input
Returns: the value of y truncated to an integer


public Factorial_PointFourRepeating()

public int factorial(int number)
Calculates the factorial of a non-negative integer
Parameters: number - a non-negative integer input
Returns: the factorial of number as an integer

public double pointFourEtc(int four)
Calculates the value of 0.4 repeating
Parameters: four - must be the integer 4.
Returns: the value of 0.4 repeating as a double


public Multiply_Divide()

public double divideDoubles(double numerator, double denominator)
Divides two double values
Parameters:
 numerator - an double input
 denominator - an double input
Returns: the quotient of the numerator and denominator as a double

public int divideIntegers(int numerator, int denominator)
Divides two integer values using integer division rules. If int/int all decimals are truncated, not rounded.
Parameters:
 numerator - an integer input
 denominator - an integer input
Returns: the quotient of the numerator and denominator as an integer

public double multiplyDoubles(double xFactor, double yFactor)
Multiplies two double values
Parameters:
 xFactor - an double input
 yFactor - an double input
Returns: the product of xFactor and yFactor as a double

public int multiplyIntegers(int xFactor, int yFactor)
Multiplies two integer values
Parameters:
 xFactor - an integer input
 yFactor - an integer input
Returns: the product of xFactor and yFactor as an integer


public SquareRoot_Powers()

public double powers(double base, double exponent)
Calculates exponential expression base^exponent
Parameters: base - the base of the exponent
Returns: the exponential calculation as a double

public double squareRoot(double number)
Calculates the square root of a value
Parameters: number - a non-negative double input
Returns: the square root of a number as a double

